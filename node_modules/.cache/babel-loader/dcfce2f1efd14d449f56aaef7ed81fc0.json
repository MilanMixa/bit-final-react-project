{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useInput = validateValue => {\n  _s();\n\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n    setIsTouched(true);\n  };\n\n  const valueIsValid = validateValue(enteredValue);\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    isTouched,\n    valueChangeHandler,\n    reset\n  };\n};\n\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/Mixa/Desktop/interview-reports/src/hooks/useInput.js"],"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueChangeHandler","event","target","value","valueIsValid","reset","isValid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,kBAAkB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,QAAMK,YAAY,GAAGT,aAAa,CAACC,YAAD,CAAlC;;AAEA,QAAMS,KAAK,GAAG,MAAM;AAChBR,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,SAAO;AACHI,IAAAA,KAAK,EAAEP,YADJ;AAEHU,IAAAA,OAAO,EAAEF,YAFN;AAGHN,IAAAA,SAHG;AAIHE,IAAAA,kBAJG;AAKHK,IAAAA;AALG,GAAP;AAOH,CAvBD;;GAAMX,Q;;AAyBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n    const [enteredValue, setEnteredValue] = useState(\"\");\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueChangeHandler = (event) => {\r\n        setEnteredValue(event.target.value);\r\n        setIsTouched(true);\r\n    }\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n\r\n    const reset = () => {\r\n        setEnteredValue(\"\");\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        isTouched,\r\n        valueChangeHandler,\r\n        reset\r\n    }\r\n};\r\n\r\nexport default useInput;"]},"metadata":{},"sourceType":"module"}