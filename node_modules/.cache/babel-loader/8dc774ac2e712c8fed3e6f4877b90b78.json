{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mixa\\\\Desktop\\\\interview-reports\\\\src\\\\components\\\\ReportsPage\\\\ReportsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport useTokenValidator from \"../../hooks/useTokenValidator\";\nimport AboutCandidate from \"./AboutCandidate/AboutCandidate\";\nimport Reports from \"./Reports/Reports\";\nimport Modal from \"./Modal/Modal\";\nimport Backdrop from \"./Modal/Backdrop\";\nimport Spinner from \"../Spinner/Spinner\";\nimport { getSingleCandidateInfo } from \"../../services/services\";\nimport { getCandidateReportsAPI } from \"../../services/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportsPage = ({\n  setIsLoggedIn\n}) => {\n  _s();\n\n  const [candidateInfo, setCandidateInfo] = useState(null);\n  const [reports, setReports] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalReport, setModalReport] = useState(null);\n  const validate = useTokenValidator();\n  const {\n    id\n  } = useParams();\n  const token = localStorage.getItem(\"token\");\n  console.log(id);\n  useEffect(() => {\n    getSingleCandidateInfo(id, token, validate, setIsLoggedIn).then(info => {\n      setCandidateInfo(info);\n    });\n  }, [setIsLoggedIn]);\n  useEffect(() => {\n    getCandidateReportsAPI(token, validate, setIsLoggedIn).then(reports => {\n      setReports(reports.filter(el => el.candidateId === parseInt(id)));\n    });\n  }, [setIsLoggedIn]);\n\n  const modalHandler = singleReport => {\n    setModalReport(singleReport);\n    setShowModal(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const cancelHandler = () => {\n    setShowModal(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  return reports && candidateInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AboutCandidate, {\n      candidateData: candidateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Reports, {\n      reports: reports,\n      modalHandler: modalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      showModal: showModal,\n      cancelModal: cancelHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      cancelModal: cancelHandler,\n      modalReport: modalReport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReportsPage, \"t8Lb4HFe/mXEWmIq40B3QZS20Nw=\", false, function () {\n  return [useTokenValidator, useParams];\n});\n\n_c = ReportsPage;\nexport default ReportsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportsPage\");","map":{"version":3,"sources":["C:/Users/Mixa/Desktop/interview-reports/src/components/ReportsPage/ReportsPage.jsx"],"names":["useState","useEffect","useParams","useTokenValidator","AboutCandidate","Reports","Modal","Backdrop","Spinner","getSingleCandidateInfo","getCandidateReportsAPI","ReportsPage","setIsLoggedIn","candidateInfo","setCandidateInfo","reports","setReports","showModal","setShowModal","modalReport","setModalReport","validate","id","token","localStorage","getItem","console","log","then","info","filter","el","candidateId","parseInt","modalHandler","singleReport","document","body","style","overflow","cancelHandler"],"mappings":"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","sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport useTokenValidator from \"../../hooks/useTokenValidator\";\r\n\r\nimport AboutCandidate from \"./AboutCandidate/AboutCandidate\";\r\nimport Reports from \"./Reports/Reports\";\r\nimport Modal from \"./Modal/Modal\";\r\nimport Backdrop from \"./Modal/Backdrop\";\r\nimport Spinner  from \"../Spinner/Spinner\";\r\n\r\n\r\nimport { getSingleCandidateInfo } from \"../../services/services\"; \r\nimport { getCandidateReportsAPI } from \"../../services/services\";\r\n\r\nconst ReportsPage = ({setIsLoggedIn}) => {\r\n  const [candidateInfo, setCandidateInfo] = useState(null);\r\n  const [reports, setReports] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalReport, setModalReport] = useState(null);\r\n\r\n  const validate = useTokenValidator();\r\n  const {id}  = useParams();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  console.log(id);\r\n  \r\n  useEffect(() => {\r\n    getSingleCandidateInfo(id, token, validate, setIsLoggedIn)\r\n    .then(info => {\r\n      setCandidateInfo(info)\r\n    });\r\n  }, [setIsLoggedIn])\r\n\r\n  useEffect(() => {\r\n    getCandidateReportsAPI(token, validate, setIsLoggedIn)\r\n      .then(reports => {\r\n        setReports(reports.filter(el => el.candidateId === parseInt(id)))\r\n      })\r\n  }, [setIsLoggedIn])\r\n\r\n  const modalHandler = (singleReport) => {\r\n    setModalReport(singleReport);\r\n    setShowModal(true);\r\n    document.body.style.overflow = 'hidden';\r\n  }\r\n\r\n  const cancelHandler = () => {\r\n    setShowModal(false);\r\n    document.body.style.overflow = 'unset';\r\n  }\r\n\r\n \r\n  return (\r\n    (reports && candidateInfo) ?\r\n    <div>\r\n    <AboutCandidate candidateData={candidateInfo}/>\r\n    <Reports reports={reports} modalHandler={modalHandler} />\r\n    <Backdrop showModal={showModal} cancelModal={cancelHandler} />\r\n    <Modal showModal={showModal} cancelModal={cancelHandler} modalReport={modalReport} />\r\n    </div>\r\n    :\r\n    <Spinner />\r\n    );\r\n  };\r\n  \r\n  export default ReportsPage;"]},"metadata":{},"sourceType":"module"}